@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Navbar {
    <div class="ms-auto">
        <div class="dropdown" style="color:#0D6EFD">
            <a class="btn btn-secondary dropdown-toggle" style="background-color:white; color: #0D6EFD;" href="#"
                role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                Menü
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuLink">
                <li><a class="dropdown-item" href="@Url.Action("Commands", "Dashboard" )">Komut Gönder</a></li>
                <li><a class="dropdown-item logout-item" href="@Url.Action("Logout", "Login")">Çıkış Yap</a></li>
                <li><a class="dropdown-item d-flex align-items-center justify-content-between" style="cursor: default;">
                        <span>Koyu Mod</span>
                        <div class="form-check form-switch m-0">
                            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                        </div>
                    </a>
                </li>
            </ul>
        </div>
    </div>
}
@model X.PagedList.IPagedList<KomutModel>
@using X.PagedList.Mvc.Core
@{
    var labels = LabelHelper.KomutLabels;
    var SqlLabels = LabelHelper.KomutSqlLabels;
}

@if (ViewBag.ShowModal == "true")
{
    <style>
        #myModal {
            display: block;
        }
    </style>
}
@if (Model != null)
{

    <div class="container-fluid mt-2">
        <div class="row">
            <div class="col-md-12">
                <div style="overflow-x: auto; white-space: nowrap; max-width: 100%;">
                    <table class="table table-bordered" style="border: 1px solid #0D6EFD;">
                        <thead>
                            <tr>

                                @foreach (var item in SqlLabels)
                                {
                            <th style="background-color: #0d6efd; color:white">
                                <a asp-action="CommandList" asp-route-sortColumn="@item.Key"
                                    asp-route-sortOrder="@(ViewBag.SortColumn == @item.Key && ViewBag.SortOrder=="asc" ? "desc" : "asc" )"
                                    asp-route-searchedColumn="@(ViewBag.SearchedColumn)"
                                    asp-route-searchedValue1="@(ViewBag.SearchedValue1)"
                                    asp-route-searchedValue2="@(ViewBag.SearchedValue2)"
                                    style="color: white; text-decoration: none; text-shadow: 1px 1px 2px black, 0 0 25px black, 0 0 5px black;">
                                    @item.Value @Html.Raw(ViewBag.SortColumn == @item.Key ? (ViewBag.SortOrder == "asc"
                                                                        ? "↑" : "↓") : "")</a>
                            </th>
                                                        }
                                <th style="background-color: #0d6efd; color:white">
                                    <a
                                        style="color: white; text-decoration: none; text-shadow: 1px 1px 2px black, 0 0 25px black, 0 0 5px black;">
                                    </a>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var comp in Model)
                            {
                                var _type = comp.GetType();
                                <tr>
                                    @foreach (var item in labels)
                                    {
                                        var prop = _type.GetProperty(item.Key);
                                        var value = prop.GetValue(comp)?.ToString() ?? "";

                                        @if (item.Key == "Response" || item.Key == "Command")
                                        {
                                            var maxLength = item.Key == "Response" ? 50 : 20;
                                            var displayText = value.Length > maxLength ? value.Substring(0, maxLength) + "..." : value;

                                            <td class="clickable-cell" style="cursor:pointer; color:#0d6efd;"
                                                title="Tam metni görmek için tıklayın" data-fulltext="@value">@displayText</td>
                                        }
                                        else
                                        {
                                            <td>@value</td>
                                        }
                                    }
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
                <!-- Sayfalama Kontrolleri -->
                <div>
                    @Html.PagedListPager(Model, page => Url.Action("CommandList", new { page }),
                    new PagedListRenderOptions
                    {
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                        MaximumPageNumbersToDisplay = 5,
                        UlElementClasses = new[] { "pagination", "justify-content-center" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" }
                    })

            </div>
        </div>
    </div>
</div>
}
else
{
    TempData["alert"] = "Komut kaydı bulunamadı.";
}
<!-- Arama Modal -->
<div id="aramaModal" style="display: none;" class="modal">
    <div class="modal-content">
        <span class="close btn-outline-danger" id="modalClose">&times;</span>
        <form method="get" action="@Url.Action("CommandList", "Dashboard")">
            <div class="mt-3">
                <div class="mb-3">
                    <label for="column" class="form-label fw-bold text-start d-block">Aranacak Sütun:</label>
                    <select name="searchedColumn" id="searchedColumn">
                        <option value="ID">Id</option>
                        <option value="COMP_NAME">Bilgisayar Adı</option>
                        <option value="COMMAND">Komut</option>
                        <option value="RESPONSE">Çıktı</option>
                        <option value="USER">Gönderen</option>
                        <option value="DATE_SENT">Gönderim Tarihi</option>
                        <option value="DATE_APPLIED">Uygulanma Tarihi</option>
                        <option value="IS_APPLIED">Tamamlanma Durumu</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label for="searchValue" class="form-label fw-bold text-start d-block">Aranacak Değer:</label>
                    <div id="searchContainer">
                        <input type="text" id="searchedValue1" name="searchedValue1" class="form-control" />
                    </div>
                </div>
            </div>

            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-4">
                        <button type="button" class="btn btn-md w-100 btn-outline-danger"
                            onclick="location.href='/Dashboard/CommandList'">
                            Aramayı Sıfırla
                        </button>
                    </div>
                    <div class="col-md-2">
                    </div>
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-md w-100 btn-outline-primary">
                            Ara
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<div id="responseModal" class="modal" tabindex="-1" style="display:none;">
    <div class="modal-content" style="max-width:600px; position:relative;">
        <span id="responseModalClose"
            style="position:absolute; top:10px; right:15px; cursor:pointer; font-weight:bold; font-size:20px;">&times;</span>
        <pre id="responseModalText"
            style="white-space: pre-wrap; word-wrap: break-word; max-height: 400px; overflow-y: auto;"></pre>
    </div>
</div>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        const searchedColumn = document.getElementById("searchedColumn");
        const searchContainer = document.getElementById("searchContainer");

        searchedColumn.addEventListener("change", function () {
            if (searchedColumn.value === "RAM" || searchedColumn.value === "DiskGB") {
                searchContainer.innerHTML = `
            <div class="d-flex align-items-center gap-2">
                <input type="number" id="searchedValue1" name="searchedValue1" class="form-control" placeholder="Minimum Değer"/>
                <input type="number" id="searchedValue2" name="searchedValue2" class="form-control" placeholder="Maksimum Değer"/>
            </div>
            `;
            }
            else if (searchedColumn.value === "DATE_SENT") {
                searchContainer.innerHTML = `
                <div class="d-flex align-items-center gap-2">
                    <input type="date" id="searchedValue1" name="searchedValue1" class="form-control" />
                    <input type="date" id="searchedValue2" name="searchedValue2" class="form-control" />
                </div>
            `;
            }
            else if (searchedColumn.value === "DATE_APPLIED") {
                searchContainer.innerHTML = `
                <div class="d-flex align-items-center gap-2">
                    <input type="date" id="searchedValue1" name="searchedValue1" class="form-control" />
                    <input type="date" id="searchedValue2" name="searchedValue2" class="form-control" />
                </div>
            `;
            } else {
                searchContainer.innerHTML = `
                <input type="text" id="searchedValue1" name="searchedValue1" class="form-control" />
            `;
            }
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const clickableCells = document.querySelectorAll(".clickable-cell");
        const modal = document.getElementById("responseModal");
        const modalText = document.getElementById("responseModalText");
        const modalClose = document.getElementById("responseModalClose");

        clickableCells.forEach(cell => {
            cell.addEventListener("click", function () {
                const fullText = cell.getAttribute("data-fulltext");
                modalText.textContent = fullText;
                modal.style.display = "block";
            });
        });

        modalClose.addEventListener("click", function () {
            modal.style.display = "none";
        });

        window.addEventListener("click", function (event) {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });
    });

</script>

<style>
    .modal {
        display: none;
        /* default gizli */
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 20px 30px 30px 30px;
        border-radius: 8px;
        width: 80%;
        max-width: 600px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        position: relative;
    }

    .modal-content .close {
        color: #ffffff;
        font: size 20px;
        font-weight: bold;
        position: absolute;
        top: 5px;
        right: 20px;
        cursor: pointer;
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 20%;
        background-color: #0d6efd;

    }

    .modal-content .close:hover,
    .modal-content .close:focus {
        color: #0d6efd;
        text-decoration: none;
        border-color: #0d6efd;
        background-color: #ccc;
    }

    .modal-content label {
        font-weight: bold;
        margin-bottom: 5px;
    }

    .modal-content select,
    .modal-content input {
        width: 100%;
        padding: 10px;
        margin: 10px 0 15px 0;
        border-radius: 4px;
        border: 1px solid #ccc;
    }

</style>